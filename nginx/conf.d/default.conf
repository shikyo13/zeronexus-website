server {
    listen 80;
    server_name zeronexus.net www.zeronexus.net *.zeronexus.net;
    root /usr/share/nginx/html;
    index index.php index.html index.htm;

    # Security Headers - configured for Cloudflare tunnel
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Add Cloudflare-specific headers
    # Setting HSTS header through Cloudflare settings is recommended 
    # instead of here to avoid duplicate headers
    add_header Cf-Cache-Status $upstream_http_cf_cache_status always;
    
    # Trust Cloudflare headers
    real_ip_header CF-Connecting-IP;
    
    # Enhanced Content Security Policy with Cloudflare compatibility
    # Main CSP directive
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://*.cloudflare.com https://kit.fontawesome.com https://feeds.zeronexus.net https://bsky.app https://api.bsky.app https://api.bsky.network https://*.bsky.social;
        style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://*.cloudflare.com https://ka-f.fontawesome.com;
        font-src 'self' https://ka-f.fontawesome.com https://*.cloudflare.com;
        connect-src 'self' https://ka-f.fontawesome.com https://*.cloudflare.com https://feeds.zeronexus.net https://services.nvd.nist.gov https://bsky.app https://api.bsky.app https://api.bsky.network https://*.bsky.social https://*.bsky.app https://video.bsky.app;
        img-src 'self' data: https://via.placeholder.com https://*.cloudflare.com https://*.bsky.app https://*.bsky.social https://*.bsky.network https://cdn.bsky.app https://cdn.bsky.social https://blogger.googleusercontent.com https://*.blogger.googleusercontent.com https://www.dropbox.com https://*.dropbox.com;
        media-src 'self' blob: https://*.bsky.app https://video.bsky.app;
        frame-src 'self' https://*.bsky.app https://video.bsky.app;
        worker-src 'self' blob: https://*.cloudflare.com;
        child-src 'self' blob: https://*.cloudflare.com https://*.bsky.app https://video.bsky.app;
        form-action 'self';
        upgrade-insecure-requests
    " always;

    # Add media policy from the global map
    add_header Content-Security-Policy $media_policy always;

    # Permissions Policy (formerly Feature-Policy)
    add_header Permissions-Policy "geolocation=(), camera=(), microphone=()" always;

    # Main location block for PHP processing
    location / {
        try_files $uri $uri/ =404;
        
        # CORS configuration for Cloudflare
        # Use Cloudflare-specific headers to determine origin
        set $cors_origin "";
        if ($http_origin ~* (https?://.*\.zeronexus\.net(:[0-9]+)?$)) {
            set $cors_origin $http_origin;
        }
        if ($http_origin ~* (https?://zeronexus\.net(:[0-9]+)?$)) {
            set $cors_origin $http_origin;
        }
        if ($http_origin ~* (http://localhost:8081$)) {
            set $cors_origin $http_origin;
        }
        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, CF-Connecting-IP, CF-IPCountry, CF-Ray, CF-Visitor, X-Forwarded-For, X-Forwarded-Proto' always;
        add_header 'Access-Control-Max-Age' '86400' always;
        add_header 'Vary' 'Origin' always;
    }
    
    # API-specific location block with additional security
    location /api/ {
        try_files $uri $uri/ =404;
        
        # Rate limiting for API
        limit_req zone=api burst=10 nodelay;
        limit_req_status 429;
        
        # CORS for API with Cloudflare support
        set $cors_origin "";
        if ($http_origin ~* (https?://.*\.zeronexus\.net(:[0-9]+)?$)) {
            set $cors_origin $http_origin;
        }
        if ($http_origin ~* (https?://zeronexus\.net(:[0-9]+)?$)) {
            set $cors_origin $http_origin;
        }
        if ($http_origin ~* (http://localhost:8081$)) {
            set $cors_origin $http_origin;
        }
        
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, CF-Connecting-IP, CF-IPCountry, CF-Ray, CF-Visitor, X-Forwarded-For, X-Forwarded-Proto' always;
        add_header 'Access-Control-Max-Age' '86400' always;
        add_header 'Vary' 'Origin' always;
    }

    # PHP handling
    location ~ \.php$ {
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        
        # Security measures for PHP
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY ""; # Prevent HTTP Proxy header attacks
        
        # FastCGI specific settings
        fastcgi_intercept_errors on;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        
        # Basic security for PHP files
        try_files $uri =404;
    }

    # Static file caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # Additional security for static files
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Basic DDoS protection
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # Deny access to specific file types
    location ~ \.(htaccess|htpasswd|ini|phps|fla|psd|log|sh)$ {
        deny all;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Gzip compression configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";
}
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Meta theme-color for light/dark modes -->
    <meta name="theme-color" content="#181a1b" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#181a1b" media="(prefers-color-scheme: dark)" />

    <!-- SEO: Title & Description -->
    <title>Security News - ZeroNexus</title>
    <meta
      name="description"
      content="Latest cybersecurity news aggregated from trusted sources including BleepingComputer, Krebs on Security, and The Hacker News."
    />

    <!-- Favicon Links -->
    <link rel="icon" type="image/png" href="/favicon.png" sizes="100x100" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="100x100" href="/favicon.png" />
    
    <!-- Font Awesome -->
    <script src="https://kit.fontawesome.com/4215701992.js" crossorigin="anonymous"></script>

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />

    <!-- Inline Styles -->
    <style>
      /* Base styles */
      body {
        background-color: #181a1b;
        color: #fff;
        margin: 0;
        padding: 0;
        font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      }

      a {
        color: #0d6efd;
        text-decoration: none;
      }

      .text-body-secondary {
        color: #fff !important;
      }

      /* Header styling */
      header {
        background-color: #181a1b;
        border-bottom: 1px solid rgb(30, 41, 59);
        padding: 1rem 0;
        text-align: center;
      }

      /* Container and layout */
      .feed-container {
        max-width: 800px;
        margin: 3rem auto;
        padding: 0 1rem;
      }

      /* Feed items styling */
      .feed-item {
        border-bottom: 1px solid rgb(30, 41, 59);
        padding: 1.5rem 0;
      }

      .feed-item:last-child {
        border-bottom: none;
      }

      .feed-item a:hover h3 {
        color: #0d6efd !important;
        transition: color 0.2s ease;
      }

      .feed-header {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.75rem;
      }

      /* Thumbnail styling */
      .feed-item img {
        background-color: #2d3238;
        transition: opacity 0.2s ease;
        border: 1px solid rgb(30, 41, 59);
      }

      .feed-item img:hover {
        opacity: 0.9;
      }

      .feed-item .flex-grow-1 {
        min-width: 0;
      }

      /* Loading animation */
      .loading-spinner {
        width: 3rem;
        height: 3rem;
        border: 0.25rem solid #2d3238;
        border-top-color: #0d6efd;
        border-radius: 50%;
        animation: spinner 1s linear infinite;
      }

      @keyframes spinner {
        to {
          transform: rotate(360deg);
        }
      }

      /* Back to home link */
      .back-link {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: #fff;
        margin-bottom: 2rem;
      }

      .back-link:hover {
        color: #0d6efd;
      }

      /* Error message styling */
      .error-message {
        background-color: rgba(220, 53, 69, 0.1);
        border: 1px solid rgba(220, 53, 69, 0.2);
        border-radius: 0.5rem;
        padding: 2rem;
      }

      /* Mobile responsiveness */
      @media (max-width: 576px) {
        .feed-item .flex-shrink-0 {
          display: none; /* Hide thumbnails on very small screens */
        }
      }
    </style>
  </head>

  <body>
    <main class="feed-container">
      <!-- Back to home link -->
      <a href="/" class="back-link">
        <i class="fa-solid fa-arrow-left"></i>
        Back to ZeroNexus
      </a>

      <!-- Feed header -->
      <h1 class="text-center mb-4">Security News</h1>
      
      <!-- Loading indicator -->
      <div id="loading" class="text-center" style="display: none;">
        <div class="loading-spinner mx-auto"></div>
        <p class="mt-3">Loading security feeds...</p>
      </div>

      <!-- Feed content -->
      <div id="security-feed" class="d-flex flex-column">
        <!-- Feed items will be inserted here -->
      </div>

      <!-- Error message -->
      <div id="error-message" class="text-center error-message" style="display: none;">
        <i class="fa-solid fa-triangle-exclamation fa-2x mb-3"></i>
        <p class="mb-0">Unable to load security feeds. Please try again later.</p>
      </div>
    </main>

    <!-- Bootstrap JS Bundle -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>

    <!-- Security Feed Integration -->
    <script>
      const securityFeed = document.getElementById('security-feed');
      const loadingIndicator = document.getElementById('loading');
      const errorMessage = document.getElementById('error-message');

      async function fetchAndDisplayFeeds() {
        try {
          // Show loading indicator
          loadingIndicator.style.display = 'block';
          securityFeed.style.display = 'none';
          errorMessage.style.display = 'none';

          const response = await fetch('https://feeds.zeronexus.net/api/feeds');
          const articles = await response.json();
          
          // Clear existing content
          securityFeed.innerHTML = '';
          
          // Create article elements
          articles.forEach(article => {
            const sourceInfo = getSourceInfo(article.source);
            const articleDate = new Date(article.date);
            const formattedDate = articleDate.toLocaleDateString('en-US', {
              month: 'short',
              day: 'numeric',
              year: 'numeric'
            });
            
            const articleElement = document.createElement('div');
            articleElement.className = 'feed-item';
            articleElement.innerHTML = `
              <div class="feed-header">
                <i class="${sourceInfo.icon} fa-fw" style="color: ${sourceInfo.color}"></i>
                <span class="text-body-secondary">${sourceInfo.name}</span>
                <span class="text-body-secondary ms-auto">${formattedDate}</span>
              </div>
              <div class="d-flex gap-3">
                ${article.thumbnail ? `
                  <div class="flex-shrink-0" style="width: 150px;">
                    <img src="${article.thumbnail}" 
                         alt="${article.title}"
                         class="img-fluid rounded"
                         style="object-fit: cover; height: 100px; width: 150px;"
                         onerror="this.style.display='none'"
                         loading="lazy"
                    />
                  </div>
                ` : ''}
                <div class="flex-grow-1">
                  <a href="${article.link}" 
                     target="_blank" 
                     rel="noreferrer" 
                     class="text-decoration-none">
                    <h3 style="font-size: 1.2rem; color: #fff;">${article.title}</h3>
                  </a>
                  <p class="text-body-secondary mb-0" style="font-size: 0.95rem;">
                    ${article.description.substring(0, 200)}${article.description.length > 200 ? '...' : ''}
                  </p>
                </div>
              </div>
            `;
            
            securityFeed.appendChild(articleElement);
          });

          // Hide loading indicator and show content
          loadingIndicator.style.display = 'none';
          securityFeed.style.display = 'flex';
        } catch (error) {
          console.error('Failed to fetch security feeds:', error);
          loadingIndicator.style.display = 'none';
          errorMessage.style.display = 'block';
        }
      }

      function getSourceInfo(source) {
        const sourceMap = {
          bleepingcomputer: {
            name: 'BleepingComputer',
            icon: 'fa-solid fa-newspaper',
            color: '#0d6efd'
          },
          krebsonsecurity: {
            name: 'Krebs on Security',
            icon: 'fa-solid fa-shield',
            color: '#dc3545'
          },
          thehackernews: {
            name: 'The Hacker News',
            icon: 'fa-solid fa-terminal',
            color: '#198754'
          }
        };
        
        return sourceMap[source] || {
          name: 'Security News',
          icon: 'fa-solid fa-newspaper',
          color: '#6c757d'
        };
      }

      // Initial load
      fetchAndDisplayFeeds();

      // Refresh feeds every 15 minutes
      setInterval(fetchAndDisplayFeeds, 15 * 60 * 1000);
    </script>
  </body>
</html>
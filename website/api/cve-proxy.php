<?php
/**
 * CVE Proxy API
 * 
 * Simple proxy to access the NVD API for CVE lookups.
 * 
 * Parameters:
 * - id: The CVE ID to look up
 */

// Set headers for JSON response
header('Content-Type: application/json');

// Enable CORS
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: GET, OPTIONS');
header('Access-Control-Allow-Headers: Content-Type');

// Exit on OPTIONS request (preflight)
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    exit(0);
}

// Get CVE ID from request
$cveId = isset($_GET['id']) ? trim($_GET['id']) : null;

// Initialize error handling
$error = null;

try {
    // Validate input
    if (!$cveId) {
        throw new Exception("Missing required parameter: id");
    }
    
    // Validate CVE ID format
    if (!preg_match('/^CVE-\d{4}-\d{4,}$/i', $cveId)) {
        throw new Exception("Invalid CVE ID format. Please use format: CVE-YYYY-NNNNN");
    }
    
    // Initialize cURL session
    $ch = curl_init();
    
    // Set cURL options
    $url = "https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=" . urlencode($cveId);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 15);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'User-Agent: ZeroNexus-CVE-Tool/1.0'
    ]);
    
    // Execute the request
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    
    // Check for cURL errors
    if (curl_errno($ch)) {
        throw new Exception("cURL Error: " . curl_error($ch));
    }
    
    // Close cURL session
    curl_close($ch);
    
    // Check for non-200 HTTP responses
    if ($httpCode !== 200) {
        throw new Exception("NVD API returned error code: $httpCode");
    }
    
    // Output the response from NVD
    echo $response;
    
} catch (Exception $e) {
    // Return error in a standardized format
    $error = [
        'error' => true,
        'message' => $e->getMessage()
    ];
    http_response_code(400);
    echo json_encode($error);
}
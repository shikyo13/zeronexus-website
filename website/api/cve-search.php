<?php
/**
 * CVE Search API
 * 
 * This endpoint provides proxy access to the NVD API for CVE lookups.
 * 
 * Parameters:
 * - id: A specific CVE ID (e.g., CVE-2023-12345)
 * - year: A year to search for CVEs (e.g., 2023)
 */

// Set security headers
header('Content-Type: application/json');
header('X-Content-Type-Options: nosniff');
header('X-Frame-Options: DENY');
header('Referrer-Policy: strict-origin-when-cross-origin');
header('X-XSS-Protection: 1; mode=block');

// Enable CORS for specific origins
$allowedOrigins = [
    'https://zeronexus.net',
    'https://www.zeronexus.net',
    'http://localhost:8081' // For local development
];

$origin = isset($_SERVER['HTTP_ORIGIN']) ? $_SERVER['HTTP_ORIGIN'] : '';

if (in_array($origin, $allowedOrigins)) {
    header("Access-Control-Allow-Origin: $origin");
    header('Access-Control-Allow-Methods: GET, OPTIONS');
    header('Access-Control-Allow-Headers: Content-Type');
}

// Exit on OPTIONS request (preflight)
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    exit(0);
}

// Very basic rate limiting based on IP
function checkRateLimit() {
    $ip = $_SERVER['REMOTE_ADDR'];
    $rateLimitFile = sys_get_temp_dir() . '/zeronexus_cve_search_rate_' . md5($ip);
    $currentTime = time();
    
    // Check if file exists and read it
    if (file_exists($rateLimitFile)) {
        $data = json_decode(file_get_contents($rateLimitFile), true);
        
        // Reset counter if more than 1 minute has passed
        if ($currentTime - $data['timestamp'] > 60) {
            $data = [
                'count' => 1,
                'timestamp' => $currentTime
            ];
        } else {
            $data['count']++;
            
            // If more than 20 requests in a minute, rate limit
            // Lower limit here since this hits external API
            if ($data['count'] > 20) {
                http_response_code(429);
                echo json_encode(['error' => true, 'message' => 'Too many requests. Please try again later.']);
                exit;
            }
        }
    } else {
        $data = [
            'count' => 1,
            'timestamp' => $currentTime
        ];
    }
    
    // Write updated data
    file_put_contents($rateLimitFile, json_encode($data));
}

// Apply rate limiting
checkRateLimit();

// Get request parameters
$cveId = isset($_GET['id']) ? trim($_GET['id']) : null;
$year = isset($_GET['year']) ? intval($_GET['year']) : null;

// Initialize error handling
$error = null;

// Function to make HTTP requests with cURL
function makeRequest($url) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_TIMEOUT, 15);
    curl_setopt($ch, CURLOPT_HTTPHEADER, [
        'User-Agent: ZeroNexus-CVE-Tool/1.0'
    ]);
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $error = curl_error($ch);
    curl_close($ch);
    
    if ($error) {
        throw new Exception("cURL Error: " . $error);
    }
    
    if ($httpCode !== 200) {
        throw new Exception("API returned non-200 status code: " . $httpCode);
    }
    
    return $response;
}

try {
    // Handle specific CVE ID lookup
    if ($cveId) {
        // Validate CVE ID format
        if (!preg_match('/^CVE-\d{4}-\d{4,}$/i', $cveId)) {
            throw new Exception("Invalid CVE ID format. Please use format: CVE-YYYY-NNNNN");
        }
        
        // Forward the request to the NVD API
        $apiUrl = "https://services.nvd.nist.gov/rest/json/cves/2.0?cveId=" . urlencode($cveId);
        $response = makeRequest($apiUrl);
        
        // Return the response as-is
        echo $response;
        exit;
    }
    
    // Handle year-based search
    elseif ($year) {
        // Validate year format (4 digits between 1988 and current year)
        $currentYear = intval(date('Y'));
        if ($year < 1988 || $year > $currentYear) {
            throw new Exception("Invalid year. Please enter a year between 1988 and $currentYear.");
        }
        
        // Create date range for the entire year
        $startDate = $year . "-01-01T00:00:00.000";
        $endDate = $year . "-12-31T23:59:59.999";
        
        // Forward the request to the NVD API with date range
        $apiUrl = "https://services.nvd.nist.gov/rest/json/cves/2.0?pubStartDate=" . urlencode($startDate) . 
                  "&pubEndDate=" . urlencode($endDate) . "&resultsPerPage=10";
        
        $response = makeRequest($apiUrl);
        
        // Return the response as-is
        echo $response;
        exit;
    }
    
    // No search parameters provided
    else {
        throw new Exception("Missing required parameter. Please provide either 'id' or 'year'.");
    }
} catch (Exception $e) {
    // Return error in a standardized format
    $error = [
        'error' => true,
        'message' => $e->getMessage()
    ];
    http_response_code(400);
    echo json_encode($error);
    exit;
}